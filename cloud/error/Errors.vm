## Resolver for Mutation.createError
#set($id = ${util.autoId()})
#set($createdDate = ${util.time.nowEpochMilliSeconds()})
#set($type = ${context.arguments.input.type})
#set($data = ${context.arguments.input.data})
#set($status = "init")
{
  "version": "2017-02-28",
  "operation": "PutItem",
  "key": {
    "id": { "S": "$id" }
  },
  "attributeValues": {
    "createdDate": { "S": "$createdDate" },
    "type": { "S": "$type" },
    "data": { "S": "$data" },
    "status": { "S": "$status" }
  }
}

${util.toJson(${context.result})}

## Resolver for Mutation.setStatus
{
  "version": "2017-02-28",
  "operation": "UpdateItem",
  "key": {
    "id": { "S": "${context.arguments.input.id}" }
  },
  "update": {
    "expression": "SET #status = :status",
    "expressionNames": {
      "#status": "status"
    },
    "expressionValues": {
      ":status": { "S": "${context.arguments.input.status}" }
    }
  }
}

$util.toJson($context.result)

## Resolver for Query.getIpAddressList
{
  "version": "2017-02-28",
  "operation": "Query",
  "index": "ipAddress-index",
  "query": {
    "expression": "ipAddress = :ipAddress",
      "expressionValues": {
        ":ipAddress": { "S": "${context.arguments.input.ipAddress}" }
      }
  }
}

{
  "ipAddressList": $utils.toJson($context.result.items)
}

## Resolver for Query.getStatus
{
    "version": "2017-02-28",
    "operation": "GetItem",
    "key": {
      "id": { "S": "${context.arguments.input.id}" }
    }
}

$util.toJson($context.result)