## Resolver for Mutation.createScreen
#set($objectKey = ${context.arguments.input.objectKey})
{
  "version" : "2018-05-29",
  "statements" : [
    "INSERT INTO contents.screens VALUES ('$objectKey', NULL, NULL, NULL, NULL, 'init')",
    "SELECT objectKey FROM contents.screens WHERE objectKey = '$objectKey'"
  ]
}

## begin
#set($objectKey = ${context.arguments.input.objectKey})
#set($createdDate = ${util.time.nowEpochMilliSeconds()})
#set($posterId = ${context.arguments.input.posterId})
#set($type = ${context.arguments.input.type})
#set($userCount = 0)
{
  "version" : "2017-02-28",
  "operation" : "POST",
  "path" : ${util.toJson("/screens/_doc/")},
  "params" : {
    "headers" : {},
    "queryString" : {},
    "body" : {
      "objectKey" : "$objectKey",
      "createdDate" : "$createdDate",
      "posterId" : "$posterId",
      "type" : "$type",
      "userCount" : "$userCount"
    }
  }
}

${utils.toJson(${context.result.get("_source")})}
## end

$utils.toJson($utils.rds.toJsonObject($context.result)[1])

## Resolver for Mutation.changePosterId
{
  "version" : "2018-05-29",
  "statements" : [
    "UPDATE contents.screens SET posterId='Anonymous' WHERE posterId = '$context.arguments.input.posterId'",
    "SELECT posterId FROM contents.screens WHERE posterId = '$context.arguments.input.posterId' LIMIT 1"
  ]
}

## begin
#set($posterId = ${context.arguments.input.posterId})
{
  "version" : "2017-02-28",
  "operation" : "POST",
  "path" : ${util.toJson("/screens/_update_by_query?conflicts=proceed")},
  "params" : {
    "headers" : {},
    "queryString" : {},
    "body" : {
      "query" : { 
        "term" : {
          "posterId" : "$posterId"
        }
      },
      "script" : {
        "inline": "ctx._source.posterId = \"Anonymous\""
      }
    }
  }
}

${utils.toJson(${context.result.get("_source")})}
## end

$utils.toJson($utils.rds.toJsonObject($context.result)[1])

## Resolver for Query.getStatus
{
  "version" : "2018-05-29",
  "statements" : [
    "SELECT status FROM contents.screens WHERE objectKey = '$context.arguments.input.objectKey'"
  ]
}

## begin
#set($objectKey = ${context.arguments.input.objectKey})
{
  "version" : "2017-02-28",
  "operation" : "GET",
  "path" : ${util.toJson("/screens/_search")},
  "params" : {
    "headers" : {},
    "queryString" : {},
    "body" : {
      "from" : 0,
      "size" : 1,
      "query" : {
        "term" : {
          "objectKey" : "$objectKey"
        }
      },
      "_source" : ["objectKey"]
    }
  }
}

[
  #foreach($entry in ${context.result.hits.hits})
  #if($velocityCount > 1), #end
  ${utils.toJson(${entry.get("_source")})}
  #end
]
## end

$utils.toJson($utils.rds.toJsonObject($context.result)[0])