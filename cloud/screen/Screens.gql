input ChangePosterIdInput {
  posterId: String!
}

input CreateScreenInput {
  objectKey: String!
  posterId: String!
  type: String!
}

input GetObjectKeyInput {
  objectKey: String!
}

input GetStatusInput {
  objectKey: String!
}

type Mutation {
  createScreen(input: CreateScreenInput!): ObjectKey
  changePosterId(input: ChangePosterIdInput!): [PosterId]
  setStatus(input: SetStatusInput!): Status
}

type ObjectKey {
  objectKey: String
}

type PosterId {
  posterId: String
}

type Query {
  getObjectKey(input: GetObjectKeyInput!): [ObjectKey]
  getStatus(input: GetStatusInput!): Status
}

type Screen {
  objectKey: String!
  createdDate: String!
  posterId: String!
  type: String!
  userCount: Int!
  status: String!
}

input SetStatusInput {
  objectKey: String!
  status: String!
}

type Status {
  status: String!
}

type Subscription {
  onSetStatus: Status @aws_subscribe(mutations: ["setStatus"])
}

schema {
  query: Query
  mutation: Mutation
}
