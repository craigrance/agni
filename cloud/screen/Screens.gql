input ChangePosterIdInput {
  posterId: String!
}

type ConnectionTimedOut {
  timed_out: Boolean
}

input CreateScreenInput {
  screenName: String!
  objectKey: String!
  posterId: String
  screenType: String!
  labels: [String]
}

input GetObjectKeysInput {
  objectKey: String
}

input GetScreenNamesInput {
  screenType: String
}

input GetScreenTypesInput {
  screenName: String
}

type Mutation {
  createScreen(input: CreateScreenInput!): ObjectKey
  changePosterId(input: ChangePosterIdInput!): ConnectionTimedOut
}

type ObjectKey {
  objectKey: String
}

type PosterId {
  posterId: String
}

type Query {
  getObjectKeys(input: GetObjectKeysInput!): [ObjectKey]
  getScreenNames(input: GetScreenNamesInput!): [ScreenName]
  getScreenTypes(input: GetScreenTypesInput!): [ScreenType]
}

type Screen {
  screenName: String!
  objectKey: String!
  createdDate: AWSTimestamp!
  posterId: String!
  screenType: String!
  labels: [String]!
  userCount: Int!
  status: String!
}

type ScreenName {
  screenName: String
}

type ScreenType {
  screenType: String
}

schema {
  query: Query
  mutation: Mutation
}
