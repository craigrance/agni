# screenName: String
# objectKey: String
# versionId: String
# createdDate: (Number)
# posterId: String
# type: String
# labels: [String]
# userCount: Int
# status: String
input ChangePosterIdInput {
  posterId: String!
}

type ConnectionTimedOut {
  timed_out: Boolean
}

input CreateScreenInput {
  screenName: String!
  objectKey: String!
  versionId: String!
  posterId: String
  type: String!
  labels: [String]
}

input DeleteScreenInput {
  screenName: String!
}

input GetObjectKeysInput {
  objectKey: String
  screenName: String
}

input GetScreenNamesInput {
  type: String!
  status: String!
}

input GetTypesInput {
  screenName: String!
}

input GetVersionIdsInput {
  objectKey: String!
}

type Mutation {
  createScreen(input: CreateScreenInput!): ObjectKey
  changePosterId(input: ChangePosterIdInput!): ConnectionTimedOut
  setStatus(input: SetStatusInput!): ConnectionTimedOut
  deleteScreen(input: DeleteScreenInput!): ConnectionTimedOut
}

type ObjectKey {
  objectKey: String
}

type PosterId {
  posterId: String
}

type Query {
  getObjectKeys(input: GetObjectKeysInput!): [ObjectKey]
  getScreenNames(input: GetScreenNamesInput!): [ScreenName]
  getVersionIds(input: GetVersionIdsInput!): [VersionId]
}

type ScreenName {
  screenName: String
}

input SetStatusInput {
  screenName: String!
  status: String!
}

type Type {
  type: String
}

type VersionId {
  versionId: String
}

schema {
  query: Query
  mutation: Mutation
}
