## Resolver for Mutation.createSignUpUser
#set($expirationDate = ${util.time.nowEpochSeconds()} + 86400)
{
  "version" : "2017-02-28",
  "operation" : "PutItem",
  "key" : {
    "id" : { "S" : "${util.autoId()}" }
  },
  "attributeValues" : {
    "createdDate" : { "S" : "${util.time.nowEpochMilliSeconds()}" },
    "ipAddress" : { "S" : "${context.identity.sourceIp[0]}" },
    "accountName" : { "S" : "${context.arguments.input.accountName}" },
    "password" : { "S" : "${context.arguments.input.password}" },
    "status" : { "S" : "init" },
    "expirationDate" : { "N" : $expirationDate }
  }
}

${util.toJson(${context.result})}

## Resolver for Mutation.setStatus
{
  "version" : "2017-02-28",
  "operation" : "UpdateItem",
  "key" : {
    "id" : { "S" : "${context.arguments.input.id}" }
  },
  "update" : {
    "expression" : "SET #status = :status",
    "expressionNames" : {
      "#status" : "status"
    },
    "expressionValues" : {
      ":status" : { "S" : "${context.arguments.input.status}" }
    }
  }
}

${util.toJson(${context.result})}

## Resolver for Query.getIpAddressList
{
  "version" : "2017-02-28",
  "operation" : "Query",
  "index" : "ipAddress-index",
  "query" : {
    "expression" : "ipAddress = :ipAddress",
    "expressionValues" : {
      ":ipAddress" : { "S" : "${context.arguments.input.ipAddress}" }
    }
  }
}

{
  "ipAddressList" : ${utils.toJson(${context.result.items})}
}

## Resolver for Query.getStatus
{
  "version" : "2017-02-28",
  "operation" : "GetItem",
  "key" : {
    "id" : { "S" : "${context.arguments.input.id}" }
  }
}

${util.toJson(${context.result})}