## Resolver for Mutation.createSignUpUser
#set($id = ${util.autoId()})
#set($createdDate = ${util.time.nowEpochMilliSeconds()})
#set($ipAddress = ${context.identity.sourceIp[0]})
#set($accountName = ${context.arguments.input.accountName})
#set($password = ${context.arguments.input.password})
#set($status = "init")
#set($expirationDate = ${util.time.nowEpochSeconds()} + 86400)
{
  "version": "2017-02-28",
  "operation": "PutItem",
  "key": {
    "id": { "S": "$id" }
  },
  "attributeValues": {
    "createdDate": { "N": $createdDate },
    "ipAddress": { "S": "$ipAddress" },
    "accountName": { "S": "$accountName" },
    "password": { "S": "$password" },
    "status": { "S": "$status" },
    "expirationDate": { "N": $expirationDate }
  }
}

${util.toJson(${context.result})}

## Resolver for Mutation.setStatus
#set($id = ${context.arguments.input.id})
#set($status = ${context.arguments.input.status})
{
  "version": "2017-02-28",
  "operation": "UpdateItem",
  "key": {
    "id": { "S": "$id" }
  },
  "update": {
    "expression": "SET #status = :status",
    "expressionNames": {
      "#status": "status"
    },
    "expressionValues": {
      ":status": { "S": "$status" }
    }
  }
}

${util.toJson(${context.result})}

## Resolver for Query.getIpAddresses
#set($ipAddress = ${context.arguments.input.ipAddress})
{
  "version": "2017-02-28",
  "operation": "Query",
  "index": "ipAddress-index",
  "query": {
    "expression": "ipAddress = :ipAddress",
    "expressionValues": {
      ":ipAddress": { "S": "$ipAddress" }
    }
  }
}

{
  "ipAddresses": ${utils.toJson(${context.result.items})}
}

## Resolver for Query.getStatus
#set($id = ${context.arguments.input.id})
{
  "version": "2017-02-28",
  "operation": "GetItem",
  "key": {
    "id": { "S": "$id" }
  }
}

${util.toJson(${context.result})}