# displayName: String
# createdDate: String
# cognitoIdentityId: String
# accountName: String
# profile: String
# postScreenCountStartDate: (Number)
# postScreenCount: Int
# status: String
type AccountName {
  accountName: String
}

type AccountNames {
  accountNames: [AccountName]
}

type CognitoIdentityId @aws_cognito_user_pools {
  cognitoIdentityId: String
}

input CreateRegisteredUserInput {
  displayName: String!
  accountName: String!
  profile: String!
}

type CreatedDate {
  createdDate: String
}

input DeleteRegisteredUserInput {
  displayName: String!
}

type DisplayName {
  displayName: String
}

input GetAccountNamesInput {
  cognitoIdentityId: String!
}

input GetCreatedDateInput {
  displayName: String!
}

input GetDisplayNameInput {
  displayName: String!
}

input GetPostScreenCountInput {
  displayName: String!
}

type Mutation {
  createRegisteredUser(input: CreateRegisteredUserInput!): DisplayName
  setCognitoIdentityId(input: SetCognitoIdentityIdInput!): CognitoIdentityId
    @aws_cognito_user_pools
  deleteRegisteredUser(input: DeleteRegisteredUserInput!): DisplayName
  prepareSetPostScreenCount(
    input: PrepareSetPostScreenCountInput!
  ): PostScreenCount
  setPostScreenCount(input: SetPostScreenCountInput!): PostScreenCount
}

type PostScreenCount {
  postScreenCount: Int
}

input PrepareSetPostScreenCountInput {
  displayName: String!
}

type Query {
  getDisplayName(input: GetDisplayNameInput!): DisplayName
  getCreatedDate(input: GetCreatedDateInput!): CreatedDate
  getAccountNames(input: GetAccountNamesInput!): AccountNames
  getPostScreenCount(input: GetPostScreenCountInput!): PostScreenCount
}

input SetCognitoIdentityIdInput {
  cognitoIdentityId: String!
}

input SetPostScreenCountInput {
  displayName: String!
  postScreenCount: Int!
}

schema {
  query: Query
  mutation: Mutation
}
