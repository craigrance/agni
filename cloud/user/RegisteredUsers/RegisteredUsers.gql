type AccountName {
  accountName: String!
}

type CognitoIdentityId @aws_cognito_user_pools {
  cognitoIdentityId: String!
}

input ConfirmDisplayNameInput {
  displayName: String!
}

input CreateRegisteredUserInput {
  displayName: String!
  accountName: String!
  status: String!
  profile: String!
}

type CreatedDate @aws_cognito_user_pools {
  createdDate: String!
}

input DeleteRegisteredUserInput {
  displayName: String!
}

type DisplayName {
  displayName: String!
}

input GetAccountNameInput {
  cognitoIdentityId: String!
}

input GetCreatedDateInput {
  displayName: String!
}

input GetDisplayNameInput {
  displayName: String!
}

type Mutation {
  createRegisteredUser(input: CreateRegisteredUserInput!): DisplayName
  setCognitoIdentityId(input: SetCognitoIdentityIdInput!): CognitoIdentityId
    @aws_cognito_user_pools
  deleteRegisteredUser(input: DeleteRegisteredUserInput!): DisplayName
  prepareSetPostScreenData(
    input: PrepareSetPostScreenDataInput!
  ): PostScreenData
  setPostScreenData(input: SetPostScreenDataInput!): PostScreenData
}

type PostScreenData {
  postScreenCountStartDate: Int!
  postScreenCount: Int!
}

input PrepareSetPostScreenDataInput {
  displayName: String!
}

type Query {
  getDisplayName(input: GetDisplayNameInput!): DisplayName
  getCreatedDate(input: GetCreatedDateInput!): CreatedDate
    @aws_cognito_user_pools
  getAccountName(input: GetAccountNameInput!): AccountName
}

type RegisteredUser {
  displayName: String!
  createdDate: String!
  cognitoIdentityId: String
  accountName: String!
  profile: String!
  postScreenCountStartDate: Int!
  postScreenCount: Int!
  status: String!
}

input SetCognitoIdentityIdInput {
  cognitoIdentityId: String!
}

input SetPostScreenDataInput {
  displayName: String!
  postScreenCount: Int!
}

schema {
  query: Query
  mutation: Mutation
}
