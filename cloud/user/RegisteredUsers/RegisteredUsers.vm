## Resolver for Mutation.createRegisteredUser
{
  "version": "2017-02-28",
  "operation": "PutItem",
  "key": {
  	 "displayName" : { "S" : "${context.arguments.input.displayName}" }
  },

  "attributeValues" : {
      "createdDate": { "S" : "${util.time.nowEpochMilliSeconds()}" },
      "accountName" : { "S" : "${context.arguments.input.accountName}" },
      "lastActivityDate": { "S" : "${util.time.nowEpochMilliSeconds()}" },
      "data": { "S" : "${context.arguments.input.data}" },
      "status": { "S": "${context.arguments.input.status}" }
  },
  "condition": {
    "expression": "attribute_not_exists(displayName)"
  }
}

$util.toJson($context.result)

## Resolver for Mutation.setCognitoIdentityId
{
  "version" : "2017-02-28",
  "operation" : "UpdateItem",
  
  #set ($accountName = $context.identity.username)
  #set ($displayName = $accountName.substring(96))
  
  "key" : {
      "displayName" : { "S" : "${displayName}" }
  },
  "update" : {
      "expression" : "SET cognitoIdentityId = :cognitoIdentityId",
      "expressionValues": {
          ":cognitoIdentityId" : { "S": "${context.arguments.input.cognitoIdentityId}" }
      }
  }
}

$util.toJson($context.result)

## Resolver for Mutation.deleteRegisteredUser
{
    "version" : "2017-02-28",
    "operation" : "DeleteItem",
    "key" : {
        "displayName" : { "S" : "${context.arguments.input.displayName}" }
    }
}

$util.toJson($context.result)

## Resolver for Mutation.setPostData
{
  "version" : "2017-02-28",
  "operation" : "UpdateItem",
  "key" : {
      "cognitoIdentityId" : { "S" : "${context.arguments.input.cognitoIdentityId}" }
  },
  "update" : {
      "expression" : "SET lastPostDate = :lastPostDate, postCount = postCount + :increment",
      "expressionValues": {
          ":lastPostDate" : { "S": "${util.time.nowEpochMilliSeconds()}" },
          ":increment" : { "N": "1" }
      }
  }
}

$util.toJson($context.result)

## Resolver for Query.getDisplayName
{
    "version" : "2017-02-28",
    "operation" : "GetItem",
    "key" : {
        "displayName" : { "S" : "${context.arguments.input.displayName}" }
    }
}

$util.toJson($context.result)

## Resolver for Query.getCreatedDate
{
    "version" : "2017-02-28",
    "operation" : "GetItem",
    "key" : {
        "displayName" : { "S" : "${context.arguments.input.displayName}" }
    }
}

$util.toJson($context.result)

## Resolver for Query.getAccountName
{
  "version" : "2017-02-28",
  "operation" : "Query",
  "index" : "cognitoIdentityId-index",
  "query" : {
    "expression": "cognitoIdentityId = :cognitoIdentityId",
      "expressionValues" : {
        ":cognitoIdentityId" : { "S" : "${context.arguments.input.cognitoIdentityId}" }
      }
  }
}

{
  "accountName": $utils.toJson($context.result.items[0]["accountName"])
}