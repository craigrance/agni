## Resolver for Mutation.createRegisteredUser
{
  "version" : "2017-02-28",
  "operation" : "PutItem",
  "key" : {
    "displayName" : { "S" : "${context.arguments.input.displayName}" }
  },
  "attributeValues" : {
    "createdDate" : { "S" : "${util.time.nowEpochMilliSeconds()}" },
    "accountName" : { "S" : "${context.arguments.input.accountName}" },
    "profile" : { "S" : "${context.arguments.input.profile}" },
    "postScreenCountStartDate" : { "N" : 0 },
    "postScreenCount" : { "N" : 0 },
    "status" : { "S" : "${context.arguments.input.status}" }
  },
  "condition" : {
    "expression" : "attribute_not_exists(displayName)"
  }
}

$util.toJson($context.result)

## Resolver for Mutation.setCognitoIdentityId
#set($accountName = $context.identity.username)
#set($displayName = $accountName.substring(96))
{
  "version" : "2017-02-28",
  "operation" : "UpdateItem",
  "key" : {
    "displayName" : { "S" : "${displayName}" }
  },
  "update" : {
    "expression" : "SET cognitoIdentityId = :cognitoIdentityId",
    "expressionValues" : {
      ":cognitoIdentityId" : { "S" : "${context.arguments.input.cognitoIdentityId}" }
    }
  }
}

$util.toJson($context.result)

## Resolver for Mutation.deleteRegisteredUser
{
  "version" : "2017-02-28",
  "operation" : "DeleteItem",
  "key" : {
    "displayName" : { "S" : "${context.arguments.input.displayName}" }
  }
}

$util.toJson($context.result)

## Resolver for Mutation.prepareSetPostScreenCount
#set($postScreenCountPeriod = 86400)
#set($currentDate = $util.time.nowEpochSeconds())
#set($postScreenCountStartDateLimit = $currentDate - $postScreenCountPeriod)
{
  "version" : "2017-02-28",
  "operation" : "UpdateItem",
  "key" : {
    "displayName" : { "S" : "${context.arguments.input.displayName}" }
  },
  "update" : {
    "expression" : "SET postScreenCount = :zero",
    "expressionValues" : {
      ":zero" : { "N" : 0 }
    }
  },
  "condition" : {
    "expression" : "postScreenCountStartDate < :postScreenCountStartDateLimit",
    "expressionValues" : {
      ":postScreenCountStartDateLimit" : { "N" : ${postScreenCountStartDateLimit} }
    }
  }
}

$util.toJson($context.result)

## Resolver for Mutation.setPostScreenCount
#set($currentDate = { "N" : ${util.time.nowEpochSeconds()} })
{
  "version" : "2017-02-28",
  "operation" : "UpdateItem",
  "key" : {
    "displayName" : { "S" : "${context.arguments.input.displayName}" }
  },
  "update" : {
    #if(${context.arguments.input.postScreenCount} == 0)
      "expression" : "SET postScreenCountStartDate = $currentDate, postScreenCount = postScreenCount + :one"
    #else
      "expression" : "SET postScreenCount = postScreenCount + :one"
    #end
    ,"expressionValues" : {
      ":one" : { "N" : 1 }
    }
  }
}

$util.toJson($context.result)

## Resolver for Query.getDisplayName
{
  "version" : "2017-02-28",
  "operation" : "GetItem",
  "key" : {
    "displayName" : { "S" : "${context.arguments.input.displayName}" }
  }
}

$util.toJson($context.result)

## Resolver for Query.getCreatedDate
{
  "version" : "2017-02-28",
  "operation" : "GetItem",
  "key" : {
    "displayName" : { "S" : "${context.arguments.input.displayName}" }
  }
}

$util.toJson($context.result)

## Resolver for Query.getAccountName
{
  "version" : "2017-02-28",
  "operation" : "Query",
  "index" : "cognitoIdentityId-index",
  "query" : {
    "expression" : "cognitoIdentityId = :cognitoIdentityId",
    "expressionValues" : {
      ":cognitoIdentityId" : { "S" : "${context.arguments.input.cognitoIdentityId}" }
    }
  }
}

{
  "accountName" : $utils.toJson($context.result.items[0]["accountName"])
}

## Resolver for Query.getPostScreenCount
{
  "version" : "2017-02-28",
  "operation" : "GetItem",
  "key" : {
    "displayName" : { "S" : "${context.arguments.input.displayName}" }
  }
}

$util.toJson($context.result)