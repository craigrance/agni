## Resolver for Mutation.createRegisteredUser
{
  "version": "2017-02-28",
  "operation": "PutItem",
  "key": {
  	 "username" : { "S" : "${context.arguments.input.username}" }
  },

  "attributeValues" : {
      "createdDate": { "S" : "${util.time.nowEpochMilliSeconds()}" },
      "accountName" : { "S" : "${context.arguments.input.accountName}" },
      "lastActivityDate": { "S" : "${util.time.nowEpochMilliSeconds()}" },
      "status": { "S": "${context.arguments.input.status}" },
      "jsonString": { "S" : "${context.arguments.input.jsonString}" }
  },
  "condition": {
    "expression": "attribute_not_exists(#username)",
    "expressionNames": {
      "#username": "username"
    }
  }
}

$util.toJson($context.result)

## Resolver for Mutation.setCognitoIdentityId
{
  "version" : "2017-02-28",
  "operation" : "UpdateItem",
  
  #set ($accountName = $context.identity.username)
  #set ($username = $accountName.substring(96))
  
  "key" : {
      "username" : { "S" : "${username}" }
  },
  "update" : {
      "expression" : "SET cognitoIdentityId = :cognitoIdentityId",
      "expressionValues": {
          ":cognitoIdentityId" : { "S": "${context.arguments.input.cognitoIdentityId}" }
      }
  }
}

$util.toJson($context.result)

## Resolver for Query.getUsername
{
    "version" : "2017-02-28",
    "operation" : "GetItem",
    "key" : {
        "username" : { "S" : "${context.arguments.input.username}" }
    }
}

$util.toJson($context.result)

## Resolver for Query.getCreatedDate
{
    "version" : "2017-02-28",
    "operation" : "GetItem",
    "key" : {
        "username" : { "S" : "${context.arguments.input.username}" }
    }
}

$util.toJson($context.result)